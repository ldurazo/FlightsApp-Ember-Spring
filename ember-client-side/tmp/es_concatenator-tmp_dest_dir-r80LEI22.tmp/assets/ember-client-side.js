eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"ember-client-side/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"ember-client-side/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=ember-client-side/app.js");

;eval("define(\"ember-client-side/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-client-side\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=ember-client-side/config/environment.js");

;eval("define(\"ember-client-side/config/environments/development\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-client-side\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=ember-client-side/config/environments/development.js");

;eval("define(\"ember-client-side/config/environments/test\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-client-side\",\"environment\":\"test\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":false,\"LOG_VIEW_LOOKUPS\":false,\"rootElement\":\"#ember-testing\"}};\n  });//# sourceURL=ember-client-side/config/environments/test.js");

;eval("define(\"ember-client-side/router\", \n  [\"ember\",\"ember-client-side/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n        this.resource(\'flights\'), {path : \'/flights\'}\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=ember-client-side/router.js");

;eval("define(\"ember-client-side/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div id=\\\"header\\\"><h1>Filghts</h1></div>\\n\\n<body>\\n   \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</body>\\n\\n\\n<footer id=\\\"info\\\">\\n    <p>2014 - Nearsoft Academy program</p>\\n</footer>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-client-side/templates/application.js");

;eval("define(\"ember-client-side/templates/flights\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<body>\\n    <nav class=\\\"col-md-3\\\" id=\\\"main-form\\\">\\n        <form action=\\\"\\\" id=\\\"search-form\\\">\\n            <label for=\\\"one-way\\\">One Way</label>\\n            <input type=\\\"checkbox\\\" id=\\\"one-way\\\"/>\\n            <label for=\\\"round-trip\\\">Round trip</label>\\n            <input type=\\\"checkbox\\\" id=\\\"round-trip\\\"/>\\n            <hr/>\\n            <label for=\\\"\\\">From:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Departure city\\\"/>\\n            <label for=\\\"\\\">To:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Arrival city\\\"/>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <label for=\\\"departure-date\\\">Departure:</label>\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"departure-date\\\"/>\\n                </div>\\n                <div class=\\\"col-md-6\\\">\\n                    <label for=\\\"returning-date\\\">Return:</label>\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"returning-date\\\"/>\\n                </div>\\n            </div>\\n            <input type=\\\"submit\\\" value=\\\"Search\\\" class=\\\"btn\\\" id=\\\"search-btn\\\"/>\\n        </form>\\n     </nav>\\n    <div id=\\\"main-container\\\" class=\\\"col-md-8 col-md-offset-1\\\">\\n\\n    </div>\\n</body>\");\n      \n    });\n  });//# sourceURL=ember-client-side/templates/flights.js");

;eval("define(\"ember-client-side/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-client-side/tests/app.jshint.js");

;eval("define(\"ember-client-side/tests/ember-client-side/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-client-side/tests/helpers\');\n    test(\'ember-client-side/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'ember-client-side/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-client-side/tests/ember-client-side/tests/helpers/resolver.jshint.js");

;eval("define(\"ember-client-side/tests/ember-client-side/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-client-side/tests/helpers\');\n    test(\'ember-client-side/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'ember-client-side/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-client-side/tests/ember-client-side/tests/helpers/start-app.jshint.js");

;eval("define(\"ember-client-side/tests/ember-client-side/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-client-side/tests\');\n    test(\'ember-client-side/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'ember-client-side/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-client-side/tests/ember-client-side/tests/test-helper.jshint.js");

;eval("define(\"ember-client-side/tests/helpers/resolver\", \n  [\"ember/resolver\",\"ember-client-side/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=ember-client-side/tests/helpers/resolver.js");

;eval("define(\"ember-client-side/tests/helpers/start-app\", \n  [\"ember\",\"ember-client-side/app\",\"ember-client-side/router\",\"ember-client-side/config/environments/test\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=ember-client-side/tests/helpers/start-app.js");

;eval("define(\"ember-client-side/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(false, \'router.js should pass jshint.\\nrouter.js: line 9, col 49, Expected an assignment or function call and instead saw an expression.\\nrouter.js: line 9, col 50, Missing semicolon.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=ember-client-side/tests/router.jshint.js");

;eval("define(\"ember-client-side/tests/test-helper\", \n  [\"ember-client-side/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=ember-client-side/tests/test-helper.js");
